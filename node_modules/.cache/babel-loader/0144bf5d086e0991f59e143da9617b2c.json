{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Desktop/img_css/PokerGame/src/components/Strategy/Strategy.tsx\";\nimport React from 'react';\nimport { getCorrectStrategy, selectionStrategy } from '../../store/entities/matrixStrategy'; // style\n\nimport './Strategy.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Strategy = _ref => {\n  let {\n    dealer,\n    player,\n    setResultStrategy\n  } = _ref;\n\n  const handleSelectionStrategy = strategy => {\n    if (getCorrectStrategy(dealer, player) === strategy) {\n      setResultStrategy('right');\n    } else {\n      setResultStrategy('wrong');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategy\",\n      \"data-testid\": \"strategy\",\n      children: selectionStrategy.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectionStrategy(item),\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Strategy;\nexport default _c2 = /*#__PURE__*/React.memo(Strategy);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Strategy\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","getCorrectStrategy","selectionStrategy","Strategy","dealer","player","setResultStrategy","handleSelectionStrategy","strategy","map","item","memo"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/components/Strategy/Strategy.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { handCardsPlayerState } from '../../store/entities/handCardsPlayers';\nimport { getCorrectStrategy, selectionStrategy} from '../../store/entities/matrixStrategy'; \n\n// style\n\nimport './Strategy.scss';\n\ninterface StrategyProps {\n  dealer:handCardsPlayerState,\n  player:handCardsPlayerState,\n  setResultStrategy:( strategy:string )=>void\n}\n\nconst Strategy: FC<StrategyProps> = ({ dealer, player, setResultStrategy }) => { \n  \n  \n\n  const handleSelectionStrategy = (strategy:string) => { \n    if( getCorrectStrategy( dealer, player) === strategy ){\n      setResultStrategy('right')\n    } else { setResultStrategy('wrong') }\n  }\n\n\n  return (\n    <>   \n      <div className=\"strategy\" data-testid=\"strategy\">\n        { selectionStrategy.map( (item) => \n              <button onClick={()=>handleSelectionStrategy(item)}>{item}</button>\n          )\n        } \n        \n      </div>\n    </>\n  );\n};\n\nexport default React.memo(Strategy); "],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAqD,qCAArD,C,CAEA;;AAEA,OAAO,iBAAP;;;;AAQA,MAAMC,QAA2B,GAAG,QAA2C;EAAA,IAA1C;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,CAA0C;;EAI7E,MAAMC,uBAAuB,GAAIC,QAAD,IAAqB;IACnD,IAAIP,kBAAkB,CAAEG,MAAF,EAAUC,MAAV,CAAlB,KAAwCG,QAA5C,EAAsD;MACpDF,iBAAiB,CAAC,OAAD,CAAjB;IACD,CAFD,MAEO;MAAEA,iBAAiB,CAAC,OAAD,CAAjB;IAA4B;EACtC,CAJD;;EAOA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,UAAf;MAA0B,eAAY,UAAtC;MAAA,UACIJ,iBAAiB,CAACO,GAAlB,CAAwBC,IAAD,iBACnB;QAAQ,OAAO,EAAE,MAAIH,uBAAuB,CAACG,IAAD,CAA5C;QAAA,UAAqDA;MAArD;QAAA;QAAA;QAAA;MAAA,QADJ;IADJ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAWD,CAtBD;;KAAMP,Q;AAwBN,kCAAeH,KAAK,CAACW,IAAN,CAAWR,QAAX,CAAf"},"metadata":{},"sourceType":"module"}