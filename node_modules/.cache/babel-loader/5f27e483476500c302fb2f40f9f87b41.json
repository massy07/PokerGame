{"ast":null,"code":"import _slicedToArray from\"D:/PokerGame/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useSelector,useDispatch}from'react-redux';import{deleteCard,setNewDecks}from'../../store/reducer/decksStore';import{ImageView}from'../../components/ImageView';import{Counter}from'../../components/Counter';import{getRandomInt}from'../../store/utils/utils';// styles\nimport'./counterCards.scss';import{TitlePage}from'../../components/TitlePage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CounterCards=function CounterCards(){var dispatch=useDispatch();var _useState=useState({name:'start',valueCounter:0,valueCard:0,number:0,image:'cards/start.svg'}),_useState2=_slicedToArray(_useState,2),card=_useState2[0],setCard=_useState2[1];var decks=useSelector(function(state){return state.decks;});var creationDeck=function creationDeck(){setCard({name:'start',valueCounter:0,number:0,valueCard:0,image:'cards/start.svg'});dispatch(setNewDecks());};var removeCard=function removeCard(){var positionCard=getRandomInt(decks.length);setCard(decks[positionCard]);dispatch(deleteCard(positionCard));};return/*#__PURE__*/_jsxs(\"div\",{className:\"pg-counterCards\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TitlePage,{title:\"counter Cards\"}),/*#__PURE__*/_jsx(\"button\",{className:\"creationDeck\",onClick:creationDeck,children:\"new deck\"})]}),/*#__PURE__*/_jsx(ImageView,{imageCard:card.image,nameCard:card.name,className:\"counting\"}),/*#__PURE__*/_jsx(\"h1\",{children:decks.length}),decks.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"counter-container\",children:[/*#__PURE__*/_jsx(Counter,{valueCard:card.valueCounter,deckCards:decks.length,newDeck:card.number===0}),/*#__PURE__*/_jsx(\"button\",{className:\"removeCard\",onClick:removeCard,children:\"remove card\"})]})]});};export default/*#__PURE__*/React.memo(CounterCards);","map":{"version":3,"names":["React","useState","useSelector","useDispatch","deleteCard","setNewDecks","ImageView","Counter","getRandomInt","TitlePage","CounterCards","dispatch","name","valueCounter","valueCard","number","image","card","setCard","decks","state","creationDeck","removeCard","positionCard","length","memo"],"sources":["D:/PokerGame/src/page/CounterCards/CounterCards.tsx"],"sourcesContent":["import React, { useState } from 'react';   \r\nimport { useSelector, useDispatch  } from  'react-redux';   \r\nimport { deleteCard,  setNewDecks } from '../../store/reducer/decksStore';\r\nimport { cardState } from '../../store/entities/deck';\r\nimport { ImageView } from '../../components/ImageView';\r\nimport { rootState } from '../..'; \r\nimport { Counter } from '../../components/Counter';\r\nimport { getRandomInt } from '../../store/utils/utils';\r\n\r\n\r\n// styles\r\nimport './counterCards.scss';\r\nimport { TitlePage } from '../../components/TitlePage';\r\n\r\ninterface CounterCardsProps {  }\r\n \r\n\r\nconst CounterCards: React.FC<CounterCardsProps> = () => { \r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [ card, setCard ] = useState<cardState>( {name:'start', valueCounter:0, valueCard:0, number:0,image:'cards/start.svg'}) ; \r\n  const decks = useSelector<rootState,Array<cardState>>(  state  => state.decks  ) ;\r\n\r\n  const creationDeck = () => {\r\n    setCard( {name:'start', valueCounter:0, number:0, valueCard:0, image:'cards/start.svg'} )\r\n    dispatch(setNewDecks()) \r\n  }\r\n  \r\n  const removeCard = () => {\r\n    const positionCard = getRandomInt(decks.length) \r\n    setCard( decks[positionCard] )\r\n    dispatch( deleteCard(positionCard) ) \r\n  }\r\n\r\n\r\n  return (\r\n    <div className='pg-counterCards'>\r\n      <div>\r\n        <TitlePage title='counter Cards' />   \r\n        <button className='creationDeck' onClick={creationDeck} >new deck</button> \r\n      </div>\r\n      <ImageView imageCard={card.image} nameCard={card.name} className='counting' /> \r\n      <h1>{ decks.length }</h1>\r\n      {decks.length > 0 &&  \r\n        <div className='counter-container'  >\r\n          <Counter valueCard={card.valueCounter} deckCards={decks.length} newDeck={card.number===0} />\r\n          <button className='removeCard' onClick={removeCard} >remove card</button>\r\n        </div> \r\n      } \r\n    </div>\r\n  ); \r\n};\r\n\r\n \r\nexport default React.memo(CounterCards);\r\n\r\n"],"mappings":"kGAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAA2C,aAA3C,CACA,OAASC,UAAT,CAAsBC,WAAtB,KAAyC,gCAAzC,CAEA,OAASC,SAAT,KAA0B,4BAA1B,CAEA,OAASC,OAAT,KAAwB,0BAAxB,CACA,OAASC,YAAT,KAA6B,yBAA7B,CAGA;AACA,MAAO,qBAAP,CACA,OAASC,SAAT,KAA0B,4BAA1B,C,wFAKA,GAAMC,aAAyC,CAAG,QAA5CA,aAA4C,EAAM,CAEtD,GAAMC,SAAQ,CAAGR,WAAW,EAA5B,CAEA,cAA0BF,QAAQ,CAAa,CAACW,IAAI,CAAC,OAAN,CAAeC,YAAY,CAAC,CAA5B,CAA+BC,SAAS,CAAC,CAAzC,CAA4CC,MAAM,CAAC,CAAnD,CAAqDC,KAAK,CAAC,iBAA3D,CAAb,CAAlC,wCAAQC,IAAR,eAAcC,OAAd,eACA,GAAMC,MAAK,CAAGjB,WAAW,CAA+B,SAAAkB,KAAK,QAAKA,MAAK,CAACD,KAAX,EAApC,CAAzB,CAEA,GAAME,aAAY,CAAG,QAAfA,aAAe,EAAM,CACzBH,OAAO,CAAE,CAACN,IAAI,CAAC,OAAN,CAAeC,YAAY,CAAC,CAA5B,CAA+BE,MAAM,CAAC,CAAtC,CAAyCD,SAAS,CAAC,CAAnD,CAAsDE,KAAK,CAAC,iBAA5D,CAAF,CAAP,CACAL,QAAQ,CAACN,WAAW,EAAZ,CAAR,CACD,CAHD,CAKA,GAAMiB,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB,GAAMC,aAAY,CAAGf,YAAY,CAACW,KAAK,CAACK,MAAP,CAAjC,CACAN,OAAO,CAAEC,KAAK,CAACI,YAAD,CAAP,CAAP,CACAZ,QAAQ,CAAEP,UAAU,CAACmB,YAAD,CAAZ,CAAR,CACD,CAJD,CAOA,mBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,oCACE,KAAC,SAAD,EAAW,KAAK,CAAC,eAAjB,EADF,cAEE,eAAQ,SAAS,CAAC,cAAlB,CAAiC,OAAO,CAAEF,YAA1C,sBAFF,GADF,cAKE,KAAC,SAAD,EAAW,SAAS,CAAEJ,IAAI,CAACD,KAA3B,CAAkC,QAAQ,CAAEC,IAAI,CAACL,IAAjD,CAAuD,SAAS,CAAC,UAAjE,EALF,cAME,oBAAMO,KAAK,CAACK,MAAZ,EANF,CAOGL,KAAK,CAACK,MAAN,CAAe,CAAf,eACC,aAAK,SAAS,CAAC,mBAAf,wBACE,KAAC,OAAD,EAAS,SAAS,CAAEP,IAAI,CAACJ,YAAzB,CAAuC,SAAS,CAAEM,KAAK,CAACK,MAAxD,CAAgE,OAAO,CAAEP,IAAI,CAACF,MAAL,GAAc,CAAvF,EADF,cAEE,eAAQ,SAAS,CAAC,YAAlB,CAA+B,OAAO,CAAEO,UAAxC,yBAFF,GARJ,GADF,CAgBD,CAnCD,CAsCA,2BAAetB,KAAK,CAACyB,IAAN,CAAWf,YAAX,CAAf"},"metadata":{},"sourceType":"module"}