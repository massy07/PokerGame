{"ast":null,"code":"import React from'react';import{Navigate,Outlet,useLocation}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";var PrivateRoute=function PrivateRoute(){var location=useLocation();var isAuthenticated=true;// useSelector<rootState,boolean|undefined>(  state  => state.userInfo.isAuthenticated ) ; \nreturn isAuthenticated?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/privato\",state:{from:location},replace:true});};export default/*#__PURE__*/React.memo(PrivateRoute);","map":{"version":3,"names":["React","Navigate","Outlet","useLocation","PrivateRoute","location","isAuthenticated","from","memo"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/routes/PrivateRoute.tsx"],"sourcesContent":["import React  from 'react'; \nimport {Navigate, Outlet, useLocation } from \"react-router\"; \n\ninterface PrivateRouteProps { \n}\n\nconst PrivateRoute:React.FC<PrivateRouteProps>  = ( ) => { \n\n\n  const location = useLocation();\n \n  const isAuthenticated  = true  // useSelector<rootState,boolean|undefined>(  state  => state.userInfo.isAuthenticated ) ; \n    \n    return isAuthenticated ? <Outlet/> : <Navigate to='/privato' state={{from:location}} replace />;\n\n\n};\n\nexport default React.memo(PrivateRoute);\n"],"mappings":"AAAA,MAAOA,MAAP,KAAmB,OAAnB,CACA,OAAQC,QAAR,CAAkBC,MAAlB,CAA0BC,WAA1B,KAA6C,cAA7C,C,2CAKA,GAAMC,aAAwC,CAAI,QAA5CA,aAA4C,EAAO,CAGvD,GAAMC,SAAQ,CAAGF,WAAW,EAA5B,CAEA,GAAMG,gBAAe,CAAI,IAAzB,CAA+B;AAE7B,MAAOA,gBAAe,cAAG,KAAC,MAAD,IAAH,cAAe,KAAC,QAAD,EAAU,EAAE,CAAC,UAAb,CAAwB,KAAK,CAAE,CAACC,IAAI,CAACF,QAAN,CAA/B,CAAgD,OAAO,KAAvD,EAArC,CAGH,CAVD,CAYA,2BAAeL,KAAK,CAACQ,IAAN,CAAWJ,YAAX,CAAf"},"metadata":{},"sourceType":"module"}