{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{resultValue}from'../utils/utils';export var handsPlayers=[];var handsPlayersSlice=createSlice({name:'handCardsPlayers',initialState:handsPlayers,reducers:{setPlayer:function setPlayer(state){state=[{turnOn:false,dealer:false,user:'player_1',cardHand:[],valueHand:0},{turnOn:false,dealer:true,user:'dealer',cardHand:[],valueHand:0}];console.log(state);return state;},setPlayerTable:function setPlayerTable(state,action){state=[];for(var i=0;i<action.payload;i++){state.push({turnOn:i===0,dealer:false,user:'player_'+(i+1),cardHand:[],valueHand:0});}state.push({turnOn:false,dealer:true,user:'dealer',cardHand:[],valueHand:0});return state;},setPlayerHand:function setPlayerHand(state,action){var lookingPlayer=true;if(state.length>0){for(var i=0;i<state.length;i++){if(state[i].turnOn&&lookingPlayer){state[i].cardHand.push(action.payload);state[i].turnOn=false;lookingPlayer=false;if(state[i+1]){state[i+1].turnOn=true;}else{state[0].turnOn=true;}state[i].valueHand=resultValue(state[i].cardHand);}}}return state;},setNextPlayer:function setNextPlayer(state,action){return state;}}});var _handsPlayersSlice$ac=handsPlayersSlice.actions,setPlayer=_handsPlayersSlice$ac.setPlayer,setPlayerHand=_handsPlayersSlice$ac.setPlayerHand,setPlayerTable=_handsPlayersSlice$ac.setPlayerTable;export{setPlayer,setPlayerHand,setPlayerTable};export default handsPlayersSlice.reducer;","map":{"version":3,"names":["createSlice","resultValue","handsPlayers","handsPlayersSlice","name","initialState","reducers","setPlayer","state","turnOn","dealer","user","cardHand","valueHand","console","log","setPlayerTable","action","i","payload","push","setPlayerHand","lookingPlayer","length","setNextPlayer","actions","reducer"],"sources":["D:/PokerGame/src/store/reducer/handCardsPlayersStore.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit' \r\nimport { cardState } from '../entities/deck'\r\nimport { handCardsPlayerState } from '../entities/handCardsPlayers'\r\nimport { resultValue } from '../utils/utils'\r\n \r\n\r\nexport const handsPlayers:Array<handCardsPlayerState>=[]\r\n\r\nconst handsPlayersSlice = createSlice({\r\n  name:'handCardsPlayers',\r\n  initialState: handsPlayers,\r\n  reducers:{\r\n    setPlayer:(state ) => {\r\n      state=[ \r\n        { turnOn: false, dealer: false, user: ( 'player_1') , cardHand:[] ,  valueHand: 0 } ,\r\n        { turnOn: false, dealer: true, user: 'dealer', cardHand:[], valueHand: 0}\r\n      ] \r\n      console.log(state)\r\n      return state;\r\n    }, \r\n    setPlayerTable:(state, action:PayloadAction<number>) => {\r\n      state = []   \r\n      for( let i:number=0; i<action.payload ; i++){\r\n        state.push( { turnOn:(i===0) , dealer: false, user: ( 'player_'+(i+1)) , cardHand:[] ,  valueHand: 0 } ) \r\n      } \r\n      state.push( { turnOn:false, dealer: true, user: 'dealer', cardHand:[], valueHand: 0})  \r\n      return state\r\n    }, \r\n    setPlayerHand:(state, action:PayloadAction<cardState> ) => { \r\n      let lookingPlayer:boolean=true \r\n      if( state.length>0  ){\r\n        for( let i:number=0; i<state.length ; i++){ \r\n          if( state[i].turnOn && lookingPlayer ){\r\n            state[i].cardHand.push( action.payload )   \r\n            state[i].turnOn=false\r\n            lookingPlayer=false\r\n            if(state[i+1]){\r\n              state[i+1].turnOn=true\r\n            }else{\r\n              state[0].turnOn=true\r\n            }\r\n            state[i].valueHand = resultValue( state[i].cardHand ) \r\n          }\r\n        }\r\n      }  \r\n      return state \r\n    },\r\n    setNextPlayer:(state, action:PayloadAction<cardState> ) => {\r\n      return state \r\n     } \r\n  }\r\n})\r\n \r\n\r\nexport const { setPlayer, setPlayerHand, setPlayerTable } = handsPlayersSlice.actions \r\n\r\nexport default handsPlayersSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}