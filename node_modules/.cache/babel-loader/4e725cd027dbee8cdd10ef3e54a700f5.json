{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Desktop/img_css/PokerGame/src/page/Contatore/Contatore.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { CardView } from '../../components/CardView';\n// styles\nimport './contatore.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Components that returns a counter and redirect to main page\n */\nconst Contatore = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [count, setCount] = useState(0);\n  const [numberDecks] = useState(6);\n  const [creationCard, setCreationCard] = useState(true);\n  const [deck, setDeck] = useState([]);\n  const [card, setCard] = useState({\n    semi: null,\n    name: '',\n    value: 0,\n    image: 'cards/start.svg'\n  }); // console.log( deck.length  )\n\n  useEffect(() => {\n    if (creationCard) {\n      setDeck(deck);\n      setCard(card);\n      setCreationCard(false);\n    }\n  }, [card, creationCard, numberDecks]);\n  useEffect(() => {\n    setCount(count => count + (card === null || card === void 0 ? void 0 : card.value));\n  }, [card]);\n\n  const handleCount = () => {\n    selectionCards();\n  };\n\n  const cardRemove = (deckSel, cardPosition) => {\n    let newDeck = [...deckSel];\n    newDeck.splice(cardPosition, 1);\n    return newDeck;\n  };\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const selectionCards = () => {\n    var indexCard = getRandomInt(deck.length);\n    var card = deck[indexCard];\n    setCard(card);\n    setDeck(cardRemove(deck, indexCard));\n  };\n\n  const percentDecks = (numberDecks, totCardleft) => {\n    return numberDecks * 52 - totCardleft;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pg-contatore\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/homepage\"),\n      children: \"go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"numero di mazzi \", numberDecks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"percentuale carte gi\\xE0 giocate  \", percentDecks(numberDecks, deck.length)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardView, {\n      imageCard: card.image,\n      nameCard: card.name,\n      className: \"counting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), deck.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contatore-containerButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"contatore-button\",\n        onClick: handleCount,\n        children: \" cliccami \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contatore, \"ogmZMF0zriuBgETfL2n9i2tVD2w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Contatore;\nexport default _c2 = /*#__PURE__*/React.memo(Contatore);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contatore\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","CardView","Contatore","navigate","count","setCount","numberDecks","creationCard","setCreationCard","deck","setDeck","card","setCard","semi","name","value","image","handleCount","selectionCards","cardRemove","deckSel","cardPosition","newDeck","splice","getRandomInt","max","Math","floor","random","indexCard","length","percentDecks","totCardleft","memo"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/page/Contatore/Contatore.tsx"],"sourcesContent":["import React, { useEffect, useState }  from 'react';     \nimport { useNavigate } from 'react-router';\nimport { CardView } from '../../components/CardView';\nimport { deck}  from '../../store/entities/deck';\nimport { cardState } from '../../store/entities/deck'; \n \n\n\n\n\n\n// styles\nimport './contatore.scss';\n\ninterface ContatoreProps {  }\n\n/**\n * Components that returns a counter and redirect to main page\n */\nconst Contatore: React.FC<ContatoreProps> = () => { \n \n  const navigate = useNavigate();\n  const [ count, setCount ] = useState(0)\n  const [ numberDecks ] = useState(6)\n  const [ creationCard , setCreationCard ] = useState(true) \n  const [ deck, setDeck ] = useState<Array<cardState>>([])\n  const [ card, setCard ] = useState<cardState>( {semi: null,name: '',value: 0 ,image:'cards/start.svg'}) \n\n\n  // console.log( deck.length  )\n\n   \n  useEffect(()=>{ \n    if(creationCard){\n        setDeck( deck );\n        setCard(card)\n        setCreationCard(false)\n      }\n    } , [card, creationCard, numberDecks]\n  )\n\n  useEffect(()=>{ \n    setCount( count =>  count + card?.value )\n   } , [ card ] )\n\n  const handleCount = () => {\n    selectionCards()  \n  } \n\n  const cardRemove = ( deckSel:any ,cardPosition:number) => {\n    let newDeck = [...deckSel]\n    newDeck.splice(cardPosition,1)\n    return newDeck\n  }\n \n  function getRandomInt(max:number) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const selectionCards = () => {\n    var indexCard = getRandomInt(deck.length)\n    var card = deck[indexCard]\n    setCard(card)\n    setDeck(cardRemove(deck,indexCard) )  \n  } \n\n  const percentDecks = ( numberDecks:number, totCardleft:number ) => {\n    return( ( (numberDecks*52) - totCardleft )  )\n  }\n\n  return (\n    <div className='pg-contatore'>  \n    <button onClick={()=>navigate(\"/homepage\")}>go back</button>\n      <h1>numero di mazzi {numberDecks}</h1> \n      <h1>percentuale carte gi√† giocate  { percentDecks(numberDecks, deck.length)}</h1> \n      <CardView imageCard={card.image} nameCard={card.name} className='counting' /> \n      <h1>{count}</h1>\n      { deck.length>1 &&\n        <div className='contatore-containerButton'>\n          <button className='contatore-button' onClick={ handleCount } > cliccami </button> \n        </div> \n      } \n    </div>\n  );\n};\n\n \nexport default React.memo(Contatore);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AASA;AACA,OAAO,kBAAP;;;AAIA;AACA;AACA;AACA,MAAMC,SAAmC,GAAG,MAAM;EAAA;;EAEhD,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAAEI,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAAEO,WAAF,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAAEQ,YAAF,EAAiBC,eAAjB,IAAqCT,QAAQ,CAAC,IAAD,CAAnD;EACA,MAAM,CAAEU,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAmB,EAAnB,CAAlC;EACA,MAAM,CAAEY,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,CAAa;IAACc,IAAI,EAAE,IAAP;IAAYC,IAAI,EAAE,EAAlB;IAAqBC,KAAK,EAAE,CAA5B;IAA+BC,KAAK,EAAC;EAArC,CAAb,CAAlC,CAPgD,CAUhD;;EAGAlB,SAAS,CAAC,MAAI;IACZ,IAAGS,YAAH,EAAgB;MACZG,OAAO,CAAED,IAAF,CAAP;MACAG,OAAO,CAACD,IAAD,CAAP;MACAH,eAAe,CAAC,KAAD,CAAf;IACD;EACF,CANM,EAMH,CAACG,IAAD,EAAOJ,YAAP,EAAqBD,WAArB,CANG,CAAT;EASAR,SAAS,CAAC,MAAI;IACZO,QAAQ,CAAED,KAAK,IAAKA,KAAK,IAAGO,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAAT,CAAjB,CAAR;EACA,CAFO,EAEJ,CAAEJ,IAAF,CAFI,CAAT;;EAIA,MAAMM,WAAW,GAAG,MAAM;IACxBC,cAAc;EACf,CAFD;;EAIA,MAAMC,UAAU,GAAG,CAAEC,OAAF,EAAeC,YAAf,KAAuC;IACxD,IAAIC,OAAO,GAAG,CAAC,GAAGF,OAAJ,CAAd;IACAE,OAAO,CAACC,MAAR,CAAeF,YAAf,EAA4B,CAA5B;IACA,OAAOC,OAAP;EACD,CAJD;;EAMA,SAASE,YAAT,CAAsBC,GAAtB,EAAkC;IAChC,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAP;EACD;;EAED,MAAMP,cAAc,GAAG,MAAM;IAC3B,IAAIW,SAAS,GAAGL,YAAY,CAACf,IAAI,CAACqB,MAAN,CAA5B;IACA,IAAInB,IAAI,GAAGF,IAAI,CAACoB,SAAD,CAAf;IACAjB,OAAO,CAACD,IAAD,CAAP;IACAD,OAAO,CAACS,UAAU,CAACV,IAAD,EAAMoB,SAAN,CAAX,CAAP;EACD,CALD;;EAOA,MAAME,YAAY,GAAG,CAAEzB,WAAF,EAAsB0B,WAAtB,KAA8C;IACjE,OAAW1B,WAAW,GAAC,EAAb,GAAmB0B,WAA7B;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACA;MAAQ,OAAO,EAAE,MAAI7B,QAAQ,CAAC,WAAD,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEE;MAAA,+BAAqBG,WAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,iDAAqCyB,YAAY,CAACzB,WAAD,EAAcG,IAAI,CAACqB,MAAnB,CAAjD;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,QAAD;MAAU,SAAS,EAAEnB,IAAI,CAACK,KAA1B;MAAiC,QAAQ,EAAEL,IAAI,CAACG,IAAhD;MAAsD,SAAS,EAAC;IAAhE;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,UAAKV;IAAL;MAAA;MAAA;MAAA;IAAA,QALF,EAMIK,IAAI,CAACqB,MAAL,GAAY,CAAZ,iBACA;MAAK,SAAS,EAAC,2BAAf;MAAA,uBACE;QAAQ,SAAS,EAAC,kBAAlB;QAAqC,OAAO,EAAGb,WAA/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAjED;;GAAMf,S;UAEaF,W;;;KAFbE,S;AAoEN,kCAAeL,KAAK,CAACoC,IAAN,CAAW/B,SAAX,CAAf"},"metadata":{},"sourceType":"module"}