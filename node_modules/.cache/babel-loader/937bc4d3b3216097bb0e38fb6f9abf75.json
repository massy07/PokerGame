{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const handsPlayers = [];\nconst handsPlayersSlice = createSlice({\n  name: 'handCardsPlayers',\n  initialState: handsPlayers,\n  reducers: {\n    setPlayer: state => {\n      state = [{\n        dealer: false,\n        user: 'player_1',\n        cardHand: [],\n        valueHand: 0\n      }, {\n        dealer: true,\n        user: 'dealer',\n        cardHand: [],\n        valueHand: 0\n      }];\n      return state;\n    },\n    setPlayerTable: (state, action) => {\n      state = [];\n\n      for (let i = 0; i < action.payload; i++) {\n        state.push({\n          dealer: false,\n          user: 'player_' + i++,\n          cardHand: [],\n          valueHand: 0\n        });\n      }\n\n      state.push({\n        dealer: true,\n        user: 'dealer',\n        cardHand: [],\n        valueHand: 0\n      });\n      return state;\n    },\n    setPlayerHand: (state, action) => {\n      console.log('action', action);\n      console.log('action', state);\n    }\n  }\n});\nexport const {\n  setPlayer,\n  setPlayerHand,\n  setPlayerTable\n} = handsPlayersSlice.actions;\nexport default handsPlayersSlice.reducer;","map":{"version":3,"names":["createSlice","handsPlayers","handsPlayersSlice","name","initialState","reducers","setPlayer","state","dealer","user","cardHand","valueHand","setPlayerTable","action","i","payload","push","setPlayerHand","console","log","actions","reducer"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/reducer/handCardsPlayersStore.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { cardState } from '../entities/deck'\nimport { handCardsPlayerState } from '../entities/handCardsPlayers'\n\n\nexport const handsPlayers:Array<handCardsPlayerState>=[]\n\nconst handsPlayersSlice = createSlice({\n  name:'handCardsPlayers',\n  initialState: handsPlayers,\n  reducers:{\n    setPlayer:(state ) => {\n      state=[ \n        { dealer: false, user: ( 'player_1') , cardHand:[] ,  valueHand: 0 } ,\n        { dealer: true, user: 'dealer', cardHand:[], valueHand: 0}\n      ] \n      return state;\n    }, \n    setPlayerTable:(state, action:PayloadAction<number>) => {\n      state=[] \n      for( let i:number=0; i<action.payload ; i++){\n        state.push( { dealer: false, user: ( 'player_'+(i++)) , cardHand:[] ,  valueHand: 0 } ) \n      } \n      state.push( { dealer: true, user: 'dealer', cardHand:[], valueHand: 0})  \n      return state;\n    }, \n    setPlayerHand:(state, action:PayloadAction<cardState|string>, ) => {\n      console.log('action',action) \n      console.log('action',state)\n    }\n  }\n})\n \n\nexport const { setPlayer, setPlayerHand, setPlayerTable } = handsPlayersSlice.actions \n\nexport default handsPlayersSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAKA,OAAO,MAAMC,YAAwC,GAAC,EAA/C;AAEP,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAC,kBAD+B;EAEpCC,YAAY,EAAEH,YAFsB;EAGpCI,QAAQ,EAAC;IACPC,SAAS,EAAEC,KAAD,IAAY;MACpBA,KAAK,GAAC,CACJ;QAAEC,MAAM,EAAE,KAAV;QAAiBC,IAAI,EAAI,UAAzB;QAAuCC,QAAQ,EAAC,EAAhD;QAAsDC,SAAS,EAAE;MAAjE,CADI,EAEJ;QAAEH,MAAM,EAAE,IAAV;QAAgBC,IAAI,EAAE,QAAtB;QAAgCC,QAAQ,EAAC,EAAzC;QAA6CC,SAAS,EAAE;MAAxD,CAFI,CAAN;MAIA,OAAOJ,KAAP;IACD,CAPM;IAQPK,cAAc,EAAC,CAACL,KAAD,EAAQM,MAAR,KAAyC;MACtDN,KAAK,GAAC,EAAN;;MACA,KAAK,IAAIO,CAAQ,GAAC,CAAlB,EAAqBA,CAAC,GAACD,MAAM,CAACE,OAA9B,EAAwCD,CAAC,EAAzC,EAA4C;QAC1CP,KAAK,CAACS,IAAN,CAAY;UAAER,MAAM,EAAE,KAAV;UAAiBC,IAAI,EAAI,YAAWK,CAAC,EAArC;UAA4CJ,QAAQ,EAAC,EAArD;UAA2DC,SAAS,EAAE;QAAtE,CAAZ;MACD;;MACDJ,KAAK,CAACS,IAAN,CAAY;QAAER,MAAM,EAAE,IAAV;QAAgBC,IAAI,EAAE,QAAtB;QAAgCC,QAAQ,EAAC,EAAzC;QAA6CC,SAAS,EAAE;MAAxD,CAAZ;MACA,OAAOJ,KAAP;IACD,CAfM;IAgBPU,aAAa,EAAC,CAACV,KAAD,EAAQM,MAAR,KAAqD;MACjEK,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBN,MAArB;MACAK,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBZ,KAArB;IACD;EAnBM;AAH2B,CAAD,CAArC;AA2BA,OAAO,MAAM;EAAED,SAAF;EAAaW,aAAb;EAA4BL;AAA5B,IAA+CV,iBAAiB,CAACkB,OAAvE;AAEP,eAAelB,iBAAiB,CAACmB,OAAjC"},"metadata":{},"sourceType":"module"}