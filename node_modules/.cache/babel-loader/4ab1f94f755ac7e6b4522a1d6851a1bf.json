{"ast":null,"code":"export const resultValue = ArrayCard => {\n  let valueResult = 0;\n  let findAce = ArrayCard.filter(item => item.valueCard === 1).length === 1;\n\n  for (let i = 0; i < ArrayCard.length; i++) {\n    valueResult = ArrayCard[i].valueCard + valueResult;\n\n    if (findAce) {\n      valueResult = 10 + valueResult;\n      findAce = false;\n    }\n  }\n\n  return valueResult;\n};\nexport const getRandomInt = max => {\n  return Math.floor(Math.random() * max);\n};","map":{"version":3,"names":["resultValue","ArrayCard","valueResult","findAce","filter","item","valueCard","length","i","getRandomInt","max","Math","floor","random"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/utils/utils.ts"],"sourcesContent":["import { cardState } from \"../entities/deck\" \n\nexport const resultValue = ( ArrayCard: Array<cardState>): number  => { \n  let valueResult = 0\n  let findAce :boolean = ArrayCard.filter( item => item.valueCard === 1 ).length ===1\n\n  for( let i:number=0; i<ArrayCard.length ; i++ ){    \n    valueResult = ArrayCard[i].valueCard + valueResult  \n    if( findAce ){\n      valueResult = 10 + valueResult \n      findAce = false\n    }\n  } \n  return valueResult\n}\n\nexport const getRandomInt = (max:number) => {\n  return Math.floor(Math.random() * max);\n}\n"],"mappings":"AAEA,OAAO,MAAMA,WAAW,GAAKC,SAAF,IAA2C;EACpE,IAAIC,WAAW,GAAG,CAAlB;EACA,IAAIC,OAAgB,GAAGF,SAAS,CAACG,MAAV,CAAkBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,CAA7C,EAAiDC,MAAjD,KAA2D,CAAlF;;EAEA,KAAK,IAAIC,CAAQ,GAAC,CAAlB,EAAqBA,CAAC,GAACP,SAAS,CAACM,MAAjC,EAA0CC,CAAC,EAA3C,EAA+C;IAC7CN,WAAW,GAAGD,SAAS,CAACO,CAAD,CAAT,CAAaF,SAAb,GAAyBJ,WAAvC;;IACA,IAAIC,OAAJ,EAAa;MACXD,WAAW,GAAG,KAAKA,WAAnB;MACAC,OAAO,GAAG,KAAV;IACD;EACF;;EACD,OAAOD,WAAP;AACD,CAZM;AAcP,OAAO,MAAMO,YAAY,GAAIC,GAAD,IAAgB;EAC1C,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}