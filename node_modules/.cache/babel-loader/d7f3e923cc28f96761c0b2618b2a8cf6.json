{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Desktop/img_css/PokerGame/src/page/PlayStrategy/PlayStrategy.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TitlePage } from '../../components/TitlePage';\nimport { deleteCard, setNewDecks } from '../../store/reducer/decksStore';\nimport { setPlayerHand, setPlayerTable } from '../../store/reducer/handCardsPlayersStore';\nimport { getRandomInt } from '../../store/utils/utils';\nimport { TableDistribution } from '../../components/TableDistribution';\nimport { Strategy } from '../../components/Strategy';\n// styles\nimport './playStrategy.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayStrategy = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const decks = useSelector(state => state.decks);\n  const playerTable = useSelector(state => state.handsPlayers);\n  const [strategyShow, setStrategyShow] = useState(false);\n  const [resultStrategy, setResultStrategy] = useState([]);\n\n  const startGame = () => {\n    setStrategyShow(true);\n    dispatch(setNewDecks());\n    dispatch(setPlayerTable(1));\n  };\n\n  const cardDistribution = () => {\n    setResultStrategy([]);\n    setStrategyShow(false);\n\n    for (let i = 0; i < 3; i++) {\n      takeCard();\n    }\n  };\n\n  const takeCard = () => {\n    const positionCard = getRandomInt(decks.length);\n    dispatch(setPlayerHand(decks[positionCard]));\n    dispatch(deleteCard(positionCard));\n  };\n\n  const nextHands = () => {\n    setStrategyShow(true);\n    dispatch(setPlayerTable(1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pg-playStrategy\",\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"PlayStrategy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableDistribution, {\n      playerTable: playerTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), strategyShow && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cardDistribution\",\n      onClick: cardDistribution,\n      children: \"take card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }, this), decks.length > 0 && !strategyShow && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Strategy, {\n        player: playerTable[0],\n        dealer: playerTable[1],\n        setResultStrategy: setResultStrategy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), resultStrategy.length > 0 && strategyShow && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextHands,\n      children: \" NEXT HANDS \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 58\n    }, this), decks.length <= 0 && !strategyShow && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"card on deck \", decks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayStrategy, \"NOwDnSi52TSj0D1Z0b4Eg2botX4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PlayStrategy;\nexport default _c2 = /*#__PURE__*/React.memo(PlayStrategy);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayStrategy\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","TitlePage","deleteCard","setNewDecks","setPlayerHand","setPlayerTable","getRandomInt","TableDistribution","Strategy","PlayStrategy","dispatch","decks","state","playerTable","handsPlayers","strategyShow","setStrategyShow","resultStrategy","setResultStrategy","startGame","cardDistribution","i","takeCard","positionCard","length","nextHands","memo"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/page/PlayStrategy/PlayStrategy.tsx"],"sourcesContent":["import React, { useState } from 'react';   \nimport { useSelector, useDispatch  } from  'react-redux';    \nimport { TitlePage } from '../../components/TitlePage';\nimport { deleteCard, setNewDecks } from '../../store/reducer/decksStore'; \nimport { setPlayerHand, setPlayerTable } from '../../store/reducer/handCardsPlayersStore'; \nimport { cardState } from '../../store/entities/deck';  \nimport { rootState } from '../..';  \nimport { handCardsPlayerState } from '../../store/entities/handCardsPlayers';\nimport { getRandomInt } from '../../store/utils/utils';\nimport { TableDistribution } from '../../components/TableDistribution';\nimport { Strategy } from '../../components/Strategy';\n \nimport { getCorrectStrategy } from '../../store/entities/matrixStrategy'; \n\n// styles\nimport './playStrategy.scss';\n\ninterface PlayStrategyProps {  }\n \nconst PlayStrategy: React.FC<PlayStrategyProps> = () => {  \n \n  const dispatch = useDispatch(); \n  const decks = useSelector<rootState,Array<cardState>>(  state  => state.decks  ) ;  \n  const playerTable = useSelector<rootState,Array<handCardsPlayerState>>(  state  => state.handsPlayers  ) ;\n  const [ strategyShow, setStrategyShow ] = useState(false)  \n  const [ resultStrategy, setResultStrategy  ] = useState<string[]>([])\n\n \n  const startGame = () => {\n    setStrategyShow(true)\n    dispatch(setNewDecks()) \n    dispatch( setPlayerTable(1)) \n  }\n  \n  const cardDistribution = () => { \n    setResultStrategy([])\n    setStrategyShow(false)\n    for( let i:number=0; i<3 ; i++){ \n      takeCard()\n    }\n  }\n\n  const takeCard = () => { \n    const positionCard = getRandomInt(decks.length) \n    dispatch( setPlayerHand( decks[positionCard] ) ) \n    dispatch( deleteCard(positionCard) )    \n  } \n\n  const nextHands = ()=> {\n    setStrategyShow(true)\n    dispatch( setPlayerTable(1)) \n  }\n\n\n \n  return (\n    <div className='pg-playStrategy'>   \n      <TitlePage title='PlayStrategy' />  \n      <TableDistribution playerTable={playerTable} /> \n        { strategyShow && <button className='cardDistribution' onClick={cardDistribution} >take card</button>} \n        { (decks.length > 0 && !strategyShow ) && \n          <div>\n            <Strategy player={playerTable[0]} dealer={playerTable[1]} setResultStrategy={setResultStrategy} />\n          </div>} \n        { (resultStrategy.length>0 && strategyShow  ) && <button onClick={nextHands}> NEXT HANDS </button>}\n        { (decks.length<=0 && !strategyShow ) && <button onClick={startGame}>Start Game</button>   }\n        <div>\n          <h1>card on deck {decks.length}</h1>\n        </div> \n    </div>\n  );\n};\n\n \nexport default React.memo(PlayStrategy);\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAA2C,aAA3C;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,gCAAxC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,2CAA9C;AAIA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAIA;AACA,OAAO,qBAAP;;;AAIA,MAAMC,YAAyC,GAAG,MAAM;EAAA;;EAEtD,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,KAAK,GAAGZ,WAAW,CAA+Ba,KAAK,IAAKA,KAAK,CAACD,KAA/C,CAAzB;EACA,MAAME,WAAW,GAAGd,WAAW,CAA0Ca,KAAK,IAAKA,KAAK,CAACE,YAA1D,CAA/B;EACA,MAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;EACA,MAAM,CAAEmB,cAAF,EAAkBC,iBAAlB,IAAyCpB,QAAQ,CAAW,EAAX,CAAvD;;EAGA,MAAMqB,SAAS,GAAG,MAAM;IACtBH,eAAe,CAAC,IAAD,CAAf;IACAN,QAAQ,CAACP,WAAW,EAAZ,CAAR;IACAO,QAAQ,CAAEL,cAAc,CAAC,CAAD,CAAhB,CAAR;EACD,CAJD;;EAMA,MAAMe,gBAAgB,GAAG,MAAM;IAC7BF,iBAAiB,CAAC,EAAD,CAAjB;IACAF,eAAe,CAAC,KAAD,CAAf;;IACA,KAAK,IAAIK,CAAQ,GAAC,CAAlB,EAAqBA,CAAC,GAAC,CAAvB,EAA2BA,CAAC,EAA5B,EAA+B;MAC7BC,QAAQ;IACT;EACF,CAND;;EAQA,MAAMA,QAAQ,GAAG,MAAM;IACrB,MAAMC,YAAY,GAAGjB,YAAY,CAACK,KAAK,CAACa,MAAP,CAAjC;IACAd,QAAQ,CAAEN,aAAa,CAAEO,KAAK,CAACY,YAAD,CAAP,CAAf,CAAR;IACAb,QAAQ,CAAER,UAAU,CAACqB,YAAD,CAAZ,CAAR;EACD,CAJD;;EAMA,MAAME,SAAS,GAAG,MAAK;IACrBT,eAAe,CAAC,IAAD,CAAf;IACAN,QAAQ,CAAEL,cAAc,CAAC,CAAD,CAAhB,CAAR;EACD,CAHD;;EAOA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE,QAAC,SAAD;MAAW,KAAK,EAAC;IAAjB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,iBAAD;MAAmB,WAAW,EAAEQ;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFF,EAGME,YAAY,iBAAI;MAAQ,SAAS,EAAC,kBAAlB;MAAqC,OAAO,EAAEK,gBAA9C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHtB,EAIOT,KAAK,CAACa,MAAN,GAAe,CAAf,IAAoB,CAACT,YAAtB,iBACA;MAAA,uBACE,QAAC,QAAD;QAAU,MAAM,EAAEF,WAAW,CAAC,CAAD,CAA7B;QAAkC,MAAM,EAAEA,WAAW,CAAC,CAAD,CAArD;QAA0D,iBAAiB,EAAEK;MAA7E;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALN,EAQOD,cAAc,CAACO,MAAf,GAAsB,CAAtB,IAA2BT,YAA5B,iBAA+C;MAAQ,OAAO,EAAEU,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARrD,EASOd,KAAK,CAACa,MAAN,IAAc,CAAd,IAAmB,CAACT,YAArB,iBAAuC;MAAQ,OAAO,EAAEI,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAT7C,eAUI;MAAA,uBACE;QAAA,4BAAkBR,KAAK,CAACa,MAAxB;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CApDD;;GAAMf,Y;UAEaT,W,EACHD,W,EACMA,W;;;KAJhBU,Y;AAuDN,kCAAeZ,KAAK,CAAC6B,IAAN,CAAWjB,YAAX,CAAf"},"metadata":{},"sourceType":"module"}