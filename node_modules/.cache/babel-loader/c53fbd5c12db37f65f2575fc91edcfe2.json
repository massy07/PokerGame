{"ast":null,"code":"export const resultValue = ArrayCard => {\n  let valueResult = 0;\n  let findAce = ArrayCard.filter(item => item.valueCard === 1).length;\n\n  for (let i = 0; i < ArrayCard.length; i++) {\n    valueResult = ArrayCard[i].valueCard + valueResult;\n\n    if (findAce === 1 && valueResult < 21) {\n      valueResult = 10 + valueResult;\n    }\n  }\n\n  return valueResult;\n};\nexport const getRandomInt = max => {\n  return Math.floor(Math.random() * max);\n};","map":{"version":3,"names":["resultValue","ArrayCard","valueResult","findAce","filter","item","valueCard","length","i","getRandomInt","max","Math","floor","random"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/utils/utils.ts"],"sourcesContent":["import { cardState } from \"../entities/deck\" \n\n\nexport const resultValue = ( ArrayCard: Array<cardState>): number  => { \n  let valueResult = 0\n  let findAce :number = ArrayCard.filter( item => item.valueCard === 1 ).length\n  for( let i:number=0; i<ArrayCard.length ; i++ ){    \n    valueResult = ArrayCard[i].valueCard + valueResult  \n    if(findAce===1 && valueResult<21 ){\n      valueResult = 10 + valueResult \n    }\n  } \n  return valueResult\n}\n\n\nexport const getRandomInt = (max:number) => {\n  return Math.floor(Math.random() * max);\n}"],"mappings":"AAGA,OAAO,MAAMA,WAAW,GAAKC,SAAF,IAA2C;EACpE,IAAIC,WAAW,GAAG,CAAlB;EACA,IAAIC,OAAe,GAAGF,SAAS,CAACG,MAAV,CAAkBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,CAA7C,EAAiDC,MAAvE;;EACA,KAAK,IAAIC,CAAQ,GAAC,CAAlB,EAAqBA,CAAC,GAACP,SAAS,CAACM,MAAjC,EAA0CC,CAAC,EAA3C,EAA+C;IAC7CN,WAAW,GAAGD,SAAS,CAACO,CAAD,CAAT,CAAaF,SAAb,GAAyBJ,WAAvC;;IACA,IAAGC,OAAO,KAAG,CAAV,IAAeD,WAAW,GAAC,EAA9B,EAAkC;MAChCA,WAAW,GAAG,KAAKA,WAAnB;IACD;EACF;;EACD,OAAOA,WAAP;AACD,CAVM;AAaP,OAAO,MAAMO,YAAY,GAAIC,GAAD,IAAgB;EAC1C,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}