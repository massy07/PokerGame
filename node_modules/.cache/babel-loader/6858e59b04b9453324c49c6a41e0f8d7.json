{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst decks = [];\nconst decksStoreSlice = createSlice({\n  name: 'decks',\n  initialState: decks,\n  reducers: {\n    setNumberDecks: state => {\n      console.log(state);\n    },\n    increment: (state, action) => {\n      state = action.payload;\n    } // decrement:(state) => { state.count -= 1  },\n    // incrementByPayload : (state, action:PayloadAction<number> ) => { state.count += action.payload  }, \n\n  }\n}); // export const decks = (numberDeck:number):Array<cardState> => {\n//   const deck:Array<cardState> = []\n//   for(let i:number=0; i<numberDeck ;i++){ \n//     deck.push( ...mazzo )\n//   }\n//   return deck;\n// }\n\nexport const getRandomInt = max => {\n  return Math.floor(Math.random() * max);\n};\nexport const {\n  increment\n} = decksStoreSlice.actions;\nexport default decksStoreSlice.reducer;","map":{"version":3,"names":["createSlice","decks","decksStoreSlice","name","initialState","reducers","setNumberDecks","state","console","log","increment","action","payload","getRandomInt","max","Math","floor","random","actions","reducer"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/mazzi.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { cardState } from \"./mazzo\";\nimport { mazzo } from \"./mazzo\";\n\n\nconst decks:Array<cardState>=[]\n\nconst decksStoreSlice = createSlice({\n  name:'decks',\n  initialState: decks,\n  reducers:{\n    setNumberDecks:(state) => { console.log(state)  },\n    increment:(state, action:PayloadAction<number> ) => { state = (action.payload ) },\n    // decrement:(state) => { state.count -= 1  },\n    // incrementByPayload : (state, action:PayloadAction<number> ) => { state.count += action.payload  }, \n  }\n  \n})\n\n// export const decks = (numberDeck:number):Array<cardState> => {\n//   const deck:Array<cardState> = []\n//   for(let i:number=0; i<numberDeck ;i++){ \n//     deck.push( ...mazzo )\n//   }\n//   return deck;\n// }\n\n\nexport const getRandomInt = (max:number) => {\n  return Math.floor(Math.random() * max);\n}\n\n\n\n\n\nexport const { increment } = decksStoreSlice.actions \n\nexport default decksStoreSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAKA,MAAMC,KAAsB,GAAC,EAA7B;AAEA,MAAMC,eAAe,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAC,OAD6B;EAElCC,YAAY,EAAEH,KAFoB;EAGlCI,QAAQ,EAAC;IACPC,cAAc,EAAEC,KAAD,IAAW;MAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IAAqB,CAD1C;IAEPG,SAAS,EAAC,CAACH,KAAD,EAAQI,MAAR,KAA0C;MAAEJ,KAAK,GAAII,MAAM,CAACC,OAAhB;IAA2B,CAF1E,CAGP;IACA;;EAJO;AAHyB,CAAD,CAAnC,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAgB;EAC1C,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAP;AACD,CAFM;AAQP,OAAO,MAAM;EAAEJ;AAAF,IAAgBR,eAAe,CAACgB,OAAtC;AAEP,eAAehB,eAAe,CAACiB,OAA/B"},"metadata":{},"sourceType":"module"}