{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { resultValue } from '../utils/utils';\nexport const handsPlayers = [];\nconst handsPlayersSlice = createSlice({\n  name: 'handCardsPlayers',\n  initialState: handsPlayers,\n  reducers: {\n    setPlayer: state => {\n      state = [{\n        turnOn: false,\n        dealer: false,\n        user: 'player_1',\n        cardHand: [],\n        valueHand: 0\n      }, {\n        turnOn: false,\n        dealer: true,\n        user: 'dealer',\n        cardHand: [],\n        valueHand: 0\n      }];\n      console.log(state);\n      return state;\n    },\n    setPlayerTable: (state, action) => {\n      state = [];\n\n      for (let i = 0; i < action.payload; i++) {\n        state.push({\n          turnOn: i === 0,\n          dealer: false,\n          user: 'player_' + (i + 1),\n          cardHand: [],\n          valueHand: 0\n        });\n      }\n\n      state.push({\n        turnOn: false,\n        dealer: true,\n        user: 'dealer',\n        cardHand: [],\n        valueHand: 0\n      });\n      return state;\n    },\n    setPlayerHand: (state, action) => {\n      let lookingPlayer = true;\n\n      if (state.length > 0) {\n        for (let i = 0; i < state.length; i++) {\n          if (state[i].turnOn && lookingPlayer) {\n            state[i].cardHand.push(action.payload);\n            state[i].turnOn = false;\n            lookingPlayer = false;\n\n            if (state[i + 1]) {\n              state[i + 1].turnOn = true;\n            } else {\n              state[0].turnOn = true;\n            }\n\n            state[i].valueHand = resultValue(state[i].cardHand);\n          }\n        }\n      }\n\n      return state;\n    },\n    setNextPlayer: (state, action) => {\n      return state;\n    }\n  }\n});\nexport const {\n  setPlayer,\n  setPlayerHand,\n  setPlayerTable\n} = handsPlayersSlice.actions;\nexport default handsPlayersSlice.reducer;","map":{"version":3,"names":["createSlice","resultValue","handsPlayers","handsPlayersSlice","name","initialState","reducers","setPlayer","state","turnOn","dealer","user","cardHand","valueHand","console","log","setPlayerTable","action","i","payload","push","setPlayerHand","lookingPlayer","length","setNextPlayer","actions","reducer"],"sources":["/home/massy/Documenti/GitHub/PokerGame/src/store/reducer/handCardsPlayersStore.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit' \nimport { cardState } from '../entities/deck'\nimport { handCardsPlayerState } from '../entities/handCardsPlayers'\nimport { resultValue } from '../utils/utils'\n \n\nexport const handsPlayers:Array<handCardsPlayerState>=[]\n\nconst handsPlayersSlice = createSlice({\n  name:'handCardsPlayers',\n  initialState: handsPlayers,\n  reducers:{\n    setPlayer:(state ) => {\n      state=[ \n        { turnOn: false, dealer: false, user: ( 'player_1') , cardHand:[] ,  valueHand: 0 } ,\n        { turnOn: false, dealer: true, user: 'dealer', cardHand:[], valueHand: 0}\n      ] \n      console.log(state)\n      return state;\n    }, \n    setPlayerTable:(state, action:PayloadAction<number>) => {\n      state = []   \n      for( let i:number=0; i<action.payload ; i++){\n        state.push( { turnOn:(i===0) , dealer: false, user: ( 'player_'+(i+1)) , cardHand:[] ,  valueHand: 0 } ) \n      } \n      state.push( { turnOn:false, dealer: true, user: 'dealer', cardHand:[], valueHand: 0})  \n      return state\n    }, \n    setPlayerHand:(state, action:PayloadAction<cardState> ) => { \n      let lookingPlayer:boolean=true \n      if( state.length>0  ){\n        for( let i:number=0; i<state.length ; i++){ \n          if( state[i].turnOn && lookingPlayer ){\n            state[i].cardHand.push( action.payload )   \n            state[i].turnOn=false\n            lookingPlayer=false\n            if(state[i+1]){\n              state[i+1].turnOn=true\n            }else{\n              state[0].turnOn=true\n            }\n            state[i].valueHand = resultValue( state[i].cardHand ) \n          }\n        }\n      }  \n      return state \n    },\n    setNextPlayer:(state, action:PayloadAction<cardState> ) => {\n      return state \n     } \n  }\n})\n \n\nexport const { setPlayer, setPlayerHand, setPlayerTable } = handsPlayersSlice.actions \n\nexport default handsPlayersSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAGA,SAASC,WAAT,QAA4B,gBAA5B;AAGA,OAAO,MAAMC,YAAwC,GAAC,EAA/C;AAEP,MAAMC,iBAAiB,GAAGH,WAAW,CAAC;EACpCI,IAAI,EAAC,kBAD+B;EAEpCC,YAAY,EAAEH,YAFsB;EAGpCI,QAAQ,EAAC;IACPC,SAAS,EAAEC,KAAD,IAAY;MACpBA,KAAK,GAAC,CACJ;QAAEC,MAAM,EAAE,KAAV;QAAiBC,MAAM,EAAE,KAAzB;QAAgCC,IAAI,EAAI,UAAxC;QAAsDC,QAAQ,EAAC,EAA/D;QAAqEC,SAAS,EAAE;MAAhF,CADI,EAEJ;QAAEJ,MAAM,EAAE,KAAV;QAAiBC,MAAM,EAAE,IAAzB;QAA+BC,IAAI,EAAE,QAArC;QAA+CC,QAAQ,EAAC,EAAxD;QAA4DC,SAAS,EAAE;MAAvE,CAFI,CAAN;MAIAC,OAAO,CAACC,GAAR,CAAYP,KAAZ;MACA,OAAOA,KAAP;IACD,CARM;IASPQ,cAAc,EAAC,CAACR,KAAD,EAAQS,MAAR,KAAyC;MACtDT,KAAK,GAAG,EAAR;;MACA,KAAK,IAAIU,CAAQ,GAAC,CAAlB,EAAqBA,CAAC,GAACD,MAAM,CAACE,OAA9B,EAAwCD,CAAC,EAAzC,EAA4C;QAC1CV,KAAK,CAACY,IAAN,CAAY;UAAEX,MAAM,EAAES,CAAC,KAAG,CAAd;UAAmBR,MAAM,EAAE,KAA3B;UAAkCC,IAAI,EAAI,aAAWO,CAAC,GAAC,CAAb,CAA1C;UAA6DN,QAAQ,EAAC,EAAtE;UAA4EC,SAAS,EAAE;QAAvF,CAAZ;MACD;;MACDL,KAAK,CAACY,IAAN,CAAY;QAAEX,MAAM,EAAC,KAAT;QAAgBC,MAAM,EAAE,IAAxB;QAA8BC,IAAI,EAAE,QAApC;QAA8CC,QAAQ,EAAC,EAAvD;QAA2DC,SAAS,EAAE;MAAtE,CAAZ;MACA,OAAOL,KAAP;IACD,CAhBM;IAiBPa,aAAa,EAAC,CAACb,KAAD,EAAQS,MAAR,KAA6C;MACzD,IAAIK,aAAqB,GAAC,IAA1B;;MACA,IAAId,KAAK,CAACe,MAAN,GAAa,CAAjB,EAAqB;QACnB,KAAK,IAAIL,CAAQ,GAAC,CAAlB,EAAqBA,CAAC,GAACV,KAAK,CAACe,MAA7B,EAAsCL,CAAC,EAAvC,EAA0C;UACxC,IAAIV,KAAK,CAACU,CAAD,CAAL,CAAST,MAAT,IAAmBa,aAAvB,EAAsC;YACpCd,KAAK,CAACU,CAAD,CAAL,CAASN,QAAT,CAAkBQ,IAAlB,CAAwBH,MAAM,CAACE,OAA/B;YACAX,KAAK,CAACU,CAAD,CAAL,CAAST,MAAT,GAAgB,KAAhB;YACAa,aAAa,GAAC,KAAd;;YACA,IAAGd,KAAK,CAACU,CAAC,GAAC,CAAH,CAAR,EAAc;cACZV,KAAK,CAACU,CAAC,GAAC,CAAH,CAAL,CAAWT,MAAX,GAAkB,IAAlB;YACD,CAFD,MAEK;cACHD,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,GAAgB,IAAhB;YACD;;YACDD,KAAK,CAACU,CAAD,CAAL,CAASL,SAAT,GAAqBZ,WAAW,CAAEO,KAAK,CAACU,CAAD,CAAL,CAASN,QAAX,CAAhC;UACD;QACF;MACF;;MACD,OAAOJ,KAAP;IACD,CAnCM;IAoCPgB,aAAa,EAAC,CAAChB,KAAD,EAAQS,MAAR,KAA6C;MACzD,OAAOT,KAAP;IACA;EAtCK;AAH2B,CAAD,CAArC;AA8CA,OAAO,MAAM;EAAED,SAAF;EAAac,aAAb;EAA4BL;AAA5B,IAA+Cb,iBAAiB,CAACsB,OAAvE;AAEP,eAAetB,iBAAiB,CAACuB,OAAjC"},"metadata":{},"sourceType":"module"}