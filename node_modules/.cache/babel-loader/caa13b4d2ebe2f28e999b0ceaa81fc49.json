{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{resultValue}from'../utils/utils';export var handsPlayers=[];var handsPlayersSlice=createSlice({name:'handCardsPlayers',initialState:handsPlayers,reducers:{setPlayer:function setPlayer(state){state=[{turnOn:false,dealer:false,user:'player_1',cardHand:[],valueHand:0},{turnOn:false,dealer:true,user:'dealer',cardHand:[],valueHand:0}];return state;},setPlayerTable:function setPlayerTable(state,action){state=[];for(var i=0;i<action.payload;i++){state.push({turnOn:i===0,dealer:false,user:'player_'+(i+1),cardHand:[],valueHand:0});}state.push({turnOn:false,dealer:true,user:'dealer',cardHand:[],valueHand:0});return state;},setPlayerHand:function setPlayerHand(state,action){var lookingPlayer=true;if(state.length>0){for(var i=0;i<state.length;i++){if(state[i].turnOn&&lookingPlayer){state[i].cardHand.push(action.payload);state[i].turnOn=false;lookingPlayer=false;if(state[i+1]){state[i+1].turnOn=true;}else{state[0].turnOn=true;}state[i].valueHand=resultValue(state[i].cardHand);}}}return state;},setNextPlayer:function setNextPlayer(state,action){return state;}}});var _handsPlayersSlice$ac=handsPlayersSlice.actions,setPlayer=_handsPlayersSlice$ac.setPlayer,setPlayerHand=_handsPlayersSlice$ac.setPlayerHand,setPlayerTable=_handsPlayersSlice$ac.setPlayerTable;export{setPlayer,setPlayerHand,setPlayerTable};export default handsPlayersSlice.reducer;","map":{"version":3,"names":["createSlice","resultValue","handsPlayers","handsPlayersSlice","name","initialState","reducers","setPlayer","state","turnOn","dealer","user","cardHand","valueHand","setPlayerTable","action","i","payload","push","setPlayerHand","lookingPlayer","length","setNextPlayer","actions","reducer"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/reducer/handCardsPlayersStore.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit' \nimport { cardState } from '../entities/deck'\nimport { handCardsPlayerState } from '../entities/handCardsPlayers'\nimport { resultValue } from '../utils/utils'\n \n\nexport const handsPlayers:Array<handCardsPlayerState>=[]\n\nconst handsPlayersSlice = createSlice({\n  name:'handCardsPlayers',\n  initialState: handsPlayers,\n  reducers:{\n    setPlayer:(state ) => {\n      state=[ \n        { turnOn: false, dealer: false, user: ( 'player_1') , cardHand:[] ,  valueHand: 0 } ,\n        { turnOn: false, dealer: true, user: 'dealer', cardHand:[], valueHand: 0}\n      ] \n      return state;\n    }, \n    setPlayerTable:(state, action:PayloadAction<number>) => {\n      state = []   \n      for( let i:number=0; i<action.payload ; i++){\n        state.push( { turnOn:(i===0) , dealer: false, user: ( 'player_'+(i+1)) , cardHand:[] ,  valueHand: 0 } ) \n      } \n      state.push( { turnOn:false, dealer: true, user: 'dealer', cardHand:[], valueHand: 0})  \n      return state\n    }, \n    setPlayerHand:(state, action:PayloadAction<cardState> ) => { \n      let lookingPlayer:boolean=true \n      if( state.length>0  ){\n        for( let i:number=0; i<state.length ; i++){ \n          if( state[i].turnOn && lookingPlayer ){\n            state[i].cardHand.push( action.payload )   \n            state[i].turnOn=false\n            lookingPlayer=false\n            if(state[i+1]){\n              state[i+1].turnOn=true\n            }else{\n              state[0].turnOn=true\n            }\n            state[i].valueHand = resultValue( state[i].cardHand ) \n          }\n        }\n      }  \n      return state \n    },\n    setNextPlayer:(state, action:PayloadAction<cardState> ) => {\n      return state \n     } \n  }\n})\n \n\nexport const { setPlayer, setPlayerHand, setPlayerTable } = handsPlayersSlice.actions \n\nexport default handsPlayersSlice.reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAGA,OAASC,WAAT,KAA4B,gBAA5B,CAGA,MAAO,IAAMC,aAAwC,CAAC,EAA/C,CAEP,GAAMC,kBAAiB,CAAGH,WAAW,CAAC,CACpCI,IAAI,CAAC,kBAD+B,CAEpCC,YAAY,CAAEH,YAFsB,CAGpCI,QAAQ,CAAC,CACPC,SAAS,CAAC,mBAACC,KAAD,CAAY,CACpBA,KAAK,CAAC,CACJ,CAAEC,MAAM,CAAE,KAAV,CAAiBC,MAAM,CAAE,KAAzB,CAAgCC,IAAI,CAAI,UAAxC,CAAsDC,QAAQ,CAAC,EAA/D,CAAqEC,SAAS,CAAE,CAAhF,CADI,CAEJ,CAAEJ,MAAM,CAAE,KAAV,CAAiBC,MAAM,CAAE,IAAzB,CAA+BC,IAAI,CAAE,QAArC,CAA+CC,QAAQ,CAAC,EAAxD,CAA4DC,SAAS,CAAE,CAAvE,CAFI,CAAN,CAIA,MAAOL,MAAP,CACD,CAPM,CAQPM,cAAc,CAAC,wBAACN,KAAD,CAAQO,MAAR,CAAyC,CACtDP,KAAK,CAAG,EAAR,CACA,IAAK,GAAIQ,EAAQ,CAAC,CAAlB,CAAqBA,CAAC,CAACD,MAAM,CAACE,OAA9B,CAAwCD,CAAC,EAAzC,CAA4C,CAC1CR,KAAK,CAACU,IAAN,CAAY,CAAET,MAAM,CAAEO,CAAC,GAAG,CAAd,CAAmBN,MAAM,CAAE,KAA3B,CAAkCC,IAAI,CAAI,WAAWK,CAAC,CAAC,CAAb,CAA1C,CAA6DJ,QAAQ,CAAC,EAAtE,CAA4EC,SAAS,CAAE,CAAvF,CAAZ,EACD,CACDL,KAAK,CAACU,IAAN,CAAY,CAAET,MAAM,CAAC,KAAT,CAAgBC,MAAM,CAAE,IAAxB,CAA8BC,IAAI,CAAE,QAApC,CAA8CC,QAAQ,CAAC,EAAvD,CAA2DC,SAAS,CAAE,CAAtE,CAAZ,EACA,MAAOL,MAAP,CACD,CAfM,CAgBPW,aAAa,CAAC,uBAACX,KAAD,CAAQO,MAAR,CAA6C,CACzD,GAAIK,cAAqB,CAAC,IAA1B,CACA,GAAIZ,KAAK,CAACa,MAAN,CAAa,CAAjB,CAAqB,CACnB,IAAK,GAAIL,EAAQ,CAAC,CAAlB,CAAqBA,CAAC,CAACR,KAAK,CAACa,MAA7B,CAAsCL,CAAC,EAAvC,CAA0C,CACxC,GAAIR,KAAK,CAACQ,CAAD,CAAL,CAASP,MAAT,EAAmBW,aAAvB,CAAsC,CACpCZ,KAAK,CAACQ,CAAD,CAAL,CAASJ,QAAT,CAAkBM,IAAlB,CAAwBH,MAAM,CAACE,OAA/B,EACAT,KAAK,CAACQ,CAAD,CAAL,CAASP,MAAT,CAAgB,KAAhB,CACAW,aAAa,CAAC,KAAd,CACA,GAAGZ,KAAK,CAACQ,CAAC,CAAC,CAAH,CAAR,CAAc,CACZR,KAAK,CAACQ,CAAC,CAAC,CAAH,CAAL,CAAWP,MAAX,CAAkB,IAAlB,CACD,CAFD,IAEK,CACHD,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,CAAgB,IAAhB,CACD,CACDD,KAAK,CAACQ,CAAD,CAAL,CAASH,SAAT,CAAqBZ,WAAW,CAAEO,KAAK,CAACQ,CAAD,CAAL,CAASJ,QAAX,CAAhC,CACD,CACF,CACF,CACD,MAAOJ,MAAP,CACD,CAlCM,CAmCPc,aAAa,CAAC,uBAACd,KAAD,CAAQO,MAAR,CAA6C,CACzD,MAAOP,MAAP,CACA,CArCK,CAH2B,CAAD,CAArC,CA6CO,0BAAqDL,iBAAiB,CAACoB,OAAvE,CAAQhB,SAAR,uBAAQA,SAAR,CAAmBY,aAAnB,uBAAmBA,aAAnB,CAAkCL,cAAlC,uBAAkCA,cAAlC,C,+CAEP,cAAeX,kBAAiB,CAACqB,OAAjC"},"metadata":{},"sourceType":"module"}