{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Desktop/img_css/PokerGame/src/components/Strategy/Strategy.tsx\";\nimport React from 'react';\nimport { getCorrectStrategy, selectionStrategy } from '../../store/entities/matrixStrategy'; // style\n\nimport './Strategy.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Strategy = _ref => {\n  let {\n    dealer,\n    player,\n    viewResult\n  } = _ref;\n\n  const handleSelectionStrategy = strategySelected => {\n    viewResult([strategySelected, getCorrectStrategy(player, dealer)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strategy\",\n    \"data-testid\": \"strategy\",\n    children: selectionStrategy.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSelectionStrategy(item),\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Strategy;\nexport default _c2 = /*#__PURE__*/React.memo(Strategy);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Strategy\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","getCorrectStrategy","selectionStrategy","Strategy","dealer","player","viewResult","handleSelectionStrategy","strategySelected","map","item","memo"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/components/Strategy/Strategy.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { handCardsPlayerState } from '../../store/entities/handCardsPlayers';\nimport { getCorrectStrategy, selectionStrategy} from '../../store/entities/matrixStrategy'; \n\n// style\n\nimport './Strategy.scss';\n\ninterface StrategyProps {\n  dealer:handCardsPlayerState,\n  player:handCardsPlayerState, \n  viewResult: (selectResult:Array<string>)=>void\n}\n\nconst Strategy: FC<StrategyProps> = ({ dealer, player, viewResult }) => {  \n\n  const handleSelectionStrategy = (strategySelected:string) => {  \n    viewResult( [strategySelected, getCorrectStrategy( player, dealer) ]) \n  }\n\n\n  return ( \n      <div className=\"strategy\" data-testid=\"strategy\">\n        { selectionStrategy.map( (item) => \n              <button onClick={()=>handleSelectionStrategy(item)}>{item}</button>\n          )\n        }  \n      </div> \n  );\n};\n\nexport default React.memo(Strategy); "],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAqD,qCAArD,C,CAEA;;AAEA,OAAO,iBAAP;;;AAQA,MAAMC,QAA2B,GAAG,QAAoC;EAAA,IAAnC;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,CAAmC;;EAEtE,MAAMC,uBAAuB,GAAIC,gBAAD,IAA6B;IAC3DF,UAAU,CAAE,CAACE,gBAAD,EAAmBP,kBAAkB,CAAEI,MAAF,EAAUD,MAAV,CAArC,CAAF,CAAV;EACD,CAFD;;EAKA,oBACI;IAAK,SAAS,EAAC,UAAf;IAA0B,eAAY,UAAtC;IAAA,UACIF,iBAAiB,CAACO,GAAlB,CAAwBC,IAAD,iBACnB;MAAQ,OAAO,EAAE,MAAIH,uBAAuB,CAACG,IAAD,CAA5C;MAAA,UAAqDA;IAArD;MAAA;MAAA;MAAA;IAAA,QADJ;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAQD,CAfD;;KAAMP,Q;AAiBN,kCAAeH,KAAK,CAACW,IAAN,CAAWR,QAAX,CAAf"},"metadata":{},"sourceType":"module"}