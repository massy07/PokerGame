{"ast":null,"code":"export var resultValue=function resultValue(ArrayCard){var valueResult=0;var findAce=ArrayCard.filter(function(item){return item.valueCard===1;}).length===1;for(var i=0;i<ArrayCard.length;i++){valueResult=ArrayCard[i].valueCard+valueResult;if(findAce){valueResult=10+valueResult;findAce=false;}}return valueResult;};export var getRandomInt=function getRandomInt(max){return Math.floor(Math.random()*max);};","map":{"version":3,"names":["resultValue","ArrayCard","valueResult","findAce","filter","item","valueCard","length","i","getRandomInt","max","Math","floor","random"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/utils/utils.ts"],"sourcesContent":["import { cardState } from \"../entities/deck\" \n\nexport const resultValue = ( ArrayCard: Array<cardState>): number  => { \n  let valueResult = 0\n  let findAce :boolean = ArrayCard.filter( item => item.valueCard === 1 ).length ===1\n\n  for( let i:number=0; i<ArrayCard.length ; i++ ){    \n    valueResult = ArrayCard[i].valueCard + valueResult  \n    if( findAce ){\n      valueResult = 10 + valueResult \n      findAce = false\n    }\n  } \n  return valueResult\n}\n\nexport const getRandomInt = (max:number) => {\n  return Math.floor(Math.random() * max);\n}\n"],"mappings":"AAEA,MAAO,IAAMA,YAAW,CAAG,QAAdA,YAAc,CAAEC,SAAF,CAA2C,CACpE,GAAIC,YAAW,CAAG,CAAlB,CACA,GAAIC,QAAgB,CAAGF,SAAS,CAACG,MAAV,CAAkB,SAAAC,IAAI,QAAIA,KAAI,CAACC,SAAL,GAAmB,CAAvB,EAAtB,EAAiDC,MAAjD,GAA2D,CAAlF,CAEA,IAAK,GAAIC,EAAQ,CAAC,CAAlB,CAAqBA,CAAC,CAACP,SAAS,CAACM,MAAjC,CAA0CC,CAAC,EAA3C,CAA+C,CAC7CN,WAAW,CAAGD,SAAS,CAACO,CAAD,CAAT,CAAaF,SAAb,CAAyBJ,WAAvC,CACA,GAAIC,OAAJ,CAAa,CACXD,WAAW,CAAG,GAAKA,WAAnB,CACAC,OAAO,CAAG,KAAV,CACD,CACF,CACD,MAAOD,YAAP,CACD,CAZM,CAcP,MAAO,IAAMO,aAAY,CAAG,QAAfA,aAAe,CAACC,GAAD,CAAgB,CAC1C,MAAOC,KAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBH,GAA3B,CAAP,CACD,CAFM"},"metadata":{},"sourceType":"module"}