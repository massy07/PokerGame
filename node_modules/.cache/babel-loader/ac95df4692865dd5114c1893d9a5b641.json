{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const handsPlayers = [];\nconst handsPlayersSlice = createSlice({\n  name: 'handCardsPlayers',\n  initialState: handsPlayers,\n  reducers: {\n    setPlayer: state => {\n      state = [{\n        dealer: true,\n        user: 'dealer',\n        cardHand: [],\n        valueHand: 0\n      }, {\n        dealer: true,\n        user: 'player_1',\n        cardHand: [],\n        valueHand: 0\n      }];\n      return state;\n    },\n    setPlayerTable: (state, action) => {\n      state = [];\n\n      for (let i = 0; i < action.payload; i++) {\n        state.push({\n          dealer: true,\n          user: 'player_' + i++,\n          cardHand: [],\n          valueHand: 0\n        });\n      }\n\n      state.push({\n        dealer: true,\n        user: 'dealer',\n        cardHand: [],\n        valueHand: 0\n      });\n      return state;\n    },\n    setPlayerHand: (state, action) => {}\n  }\n});\nexport const {\n  setPlayer\n} = handsPlayersSlice.actions;\nexport default handsPlayersSlice.reducer;","map":{"version":3,"names":["createSlice","handsPlayers","handsPlayersSlice","name","initialState","reducers","setPlayer","state","dealer","user","cardHand","valueHand","setPlayerTable","action","i","payload","push","setPlayerHand","actions","reducer"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/reducer/handCardsPlayersStore.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { handCardsPlayerState } from '../entities/handCardsPlayers'\n\n\nexport const handsPlayers:Array<handCardsPlayerState>=[]\n\nconst handsPlayersSlice = createSlice({\n  name:'handCardsPlayers',\n  initialState: handsPlayers,\n  reducers:{\n    setPlayer:(state ) => {\n      state=[ \n        { dealer: true, user: 'dealer', cardHand:[], valueHand: 0}, \n        { dealer: true, user: ( 'player_1') , cardHand:[] ,  valueHand: 0 } \n      ] \n\n      return state;\n    }, \n    setPlayerTable:(state, action:PayloadAction<number>) => {\n      state=[] \n      for( let i:number=0; i<action.payload ; i++){\n        state.push( { dealer: true, user: ( 'player_'+(i++)) , cardHand:[] ,  valueHand: 0 } ) \n      } \n      state.push( { dealer: true, user: 'dealer', cardHand:[], valueHand: 0})  \n      return state;\n    }, \n    setPlayerHand:(state, action:PayloadAction<number> ) => {\n      \n    }\n\n\n  }\n})\n \n\nexport const { setPlayer } = handsPlayersSlice.actions \n\nexport default handsPlayersSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,OAAO,MAAMC,YAAwC,GAAC,EAA/C;AAEP,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAC,kBAD+B;EAEpCC,YAAY,EAAEH,YAFsB;EAGpCI,QAAQ,EAAC;IACPC,SAAS,EAAEC,KAAD,IAAY;MACpBA,KAAK,GAAC,CACJ;QAAEC,MAAM,EAAE,IAAV;QAAgBC,IAAI,EAAE,QAAtB;QAAgCC,QAAQ,EAAC,EAAzC;QAA6CC,SAAS,EAAE;MAAxD,CADI,EAEJ;QAAEH,MAAM,EAAE,IAAV;QAAgBC,IAAI,EAAI,UAAxB;QAAsCC,QAAQ,EAAC,EAA/C;QAAqDC,SAAS,EAAE;MAAhE,CAFI,CAAN;MAKA,OAAOJ,KAAP;IACD,CARM;IASPK,cAAc,EAAC,CAACL,KAAD,EAAQM,MAAR,KAAyC;MACtDN,KAAK,GAAC,EAAN;;MACA,KAAK,IAAIO,CAAQ,GAAC,CAAlB,EAAqBA,CAAC,GAACD,MAAM,CAACE,OAA9B,EAAwCD,CAAC,EAAzC,EAA4C;QAC1CP,KAAK,CAACS,IAAN,CAAY;UAAER,MAAM,EAAE,IAAV;UAAgBC,IAAI,EAAI,YAAWK,CAAC,EAApC;UAA2CJ,QAAQ,EAAC,EAApD;UAA0DC,SAAS,EAAE;QAArE,CAAZ;MACD;;MACDJ,KAAK,CAACS,IAAN,CAAY;QAAER,MAAM,EAAE,IAAV;QAAgBC,IAAI,EAAE,QAAtB;QAAgCC,QAAQ,EAAC,EAAzC;QAA6CC,SAAS,EAAE;MAAxD,CAAZ;MACA,OAAOJ,KAAP;IACD,CAhBM;IAiBPU,aAAa,EAAC,CAACV,KAAD,EAAQM,MAAR,KAA0C,CAEvD;EAnBM;AAH2B,CAAD,CAArC;AA6BA,OAAO,MAAM;EAAEP;AAAF,IAAgBJ,iBAAiB,CAACgB,OAAxC;AAEP,eAAehB,iBAAiB,CAACiB,OAAjC"},"metadata":{},"sourceType":"module"}