{"ast":null,"code":"import _toConsumableArray from\"/Users/m.europa/Desktop/img_css/PokerGame/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from'@reduxjs/toolkit';import{deck}from\"../entities/deck\";export var decks=[];var decksStoreSlice=createSlice({name:'decks',initialState:decks,reducers:{setViewState:function setViewState(state){console.log(state);},setNewDecks:function setNewDecks(state){state=[];for(var i=0;i<6;i++){var _state;(_state=state).push.apply(_state,_toConsumableArray(deck));}return state;},setNumberDecks:function setNumberDecks(state,action){state=[];for(var i=0;i<action.payload;i++){var _state2;(_state2=state).push.apply(_state2,_toConsumableArray(deck));}return state;},deleteCard:function deleteCard(state,action){var newDeck=_toConsumableArray(state);newDeck.splice(action.payload,1);return newDeck;}}});var _decksStoreSlice$acti=decksStoreSlice.actions,setViewState=_decksStoreSlice$acti.setViewState,setNewDecks=_decksStoreSlice$acti.setNewDecks,deleteCard=_decksStoreSlice$acti.deleteCard;export{setViewState,setNewDecks,deleteCard};export default decksStoreSlice.reducer;","map":{"version":3,"names":["createSlice","deck","decks","decksStoreSlice","name","initialState","reducers","setViewState","state","console","log","setNewDecks","i","push","setNumberDecks","action","payload","deleteCard","newDeck","splice","actions","reducer"],"sources":["/Users/m.europa/Desktop/img_css/PokerGame/src/store/reducer/decksStore.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { deck, cardState } from \"../entities/deck\";\n\n\nexport const decks:Array<cardState>=[]\n\nconst decksStoreSlice = createSlice({\n  name:'decks',\n  initialState: decks,\n  reducers:{\n    setViewState:(state) => { console.log(state)  },\n    setNewDecks:(state) =>{\n      state=[]\n      for( let i:number=0; i<6; i++){\n        state.push( ...deck ) \n      }  \n      return state;\n    },\n    setNumberDecks:(state, action:PayloadAction<number> ) => {\n      state=[]\n      for( let i:number=0; i<action.payload; i++){\n        state.push( ...deck )\n      }\n      return state;\n    }, \n    deleteCard:(state, action:PayloadAction<number> ) => {\n      let newDeck = [...state]  \n      newDeck.splice( action.payload , 1 ) \n      return newDeck\n     }, \n  }\n})\n\n\nexport const { setViewState, setNewDecks, deleteCard } = decksStoreSlice.actions \n\nexport default decksStoreSlice.reducer"],"mappings":"uIAAA,OAASA,WAAT,KAA2C,kBAA3C,CACA,OAASC,IAAT,KAAgC,kBAAhC,CAGA,MAAO,IAAMC,MAAsB,CAAC,EAA7B,CAEP,GAAMC,gBAAe,CAAGH,WAAW,CAAC,CAClCI,IAAI,CAAC,OAD6B,CAElCC,YAAY,CAAEH,KAFoB,CAGlCI,QAAQ,CAAC,CACPC,YAAY,CAAC,sBAACC,KAAD,CAAW,CAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAqB,CADxC,CAEPG,WAAW,CAAC,qBAACH,KAAD,CAAU,CACpBA,KAAK,CAAC,EAAN,CACA,IAAK,GAAII,EAAQ,CAAC,CAAlB,CAAqBA,CAAC,CAAC,CAAvB,CAA0BA,CAAC,EAA3B,CAA8B,YAC5B,QAAAJ,KAAK,EAACK,IAAN,iCAAeZ,IAAf,GACD,CACD,MAAOO,MAAP,CACD,CARM,CASPM,cAAc,CAAC,wBAACN,KAAD,CAAQO,MAAR,CAA0C,CACvDP,KAAK,CAAC,EAAN,CACA,IAAK,GAAII,EAAQ,CAAC,CAAlB,CAAqBA,CAAC,CAACG,MAAM,CAACC,OAA9B,CAAuCJ,CAAC,EAAxC,CAA2C,aACzC,SAAAJ,KAAK,EAACK,IAAN,kCAAeZ,IAAf,GACD,CACD,MAAOO,MAAP,CACD,CAfM,CAgBPS,UAAU,CAAC,oBAACT,KAAD,CAAQO,MAAR,CAA0C,CACnD,GAAIG,QAAO,oBAAOV,KAAP,CAAX,CACAU,OAAO,CAACC,MAAR,CAAgBJ,MAAM,CAACC,OAAvB,CAAiC,CAAjC,EACA,MAAOE,QAAP,CACA,CApBK,CAHyB,CAAD,CAAnC,CA4BO,0BAAkDf,eAAe,CAACiB,OAAlE,CAAQb,YAAR,uBAAQA,YAAR,CAAsBI,WAAtB,uBAAsBA,WAAtB,CAAmCM,UAAnC,uBAAmCA,UAAnC,C,4CAEP,cAAed,gBAAe,CAACkB,OAA/B"},"metadata":{},"sourceType":"module"}