{"ast":null,"code":"import _toConsumableArray from\"D:/PokerGame/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from'@reduxjs/toolkit';import{deck}from\"../entities/deck\";export var decks=[];var decksStoreSlice=createSlice({name:'decks',initialState:decks,reducers:{setViewState:function setViewState(state){console.log(state);},setNewDecks:function setNewDecks(state){state=[];for(var i=0;i<6;i++){var _state;(_state=state).push.apply(_state,_toConsumableArray(deck));}return state;},setNumberDecks:function setNumberDecks(state,action){var newDeck=[];for(var i=0;i<action.payload;i++){newDeck.push.apply(newDeck,_toConsumableArray(deck));}return newDeck;},deleteCard:function deleteCard(state,action){var newDeck=_toConsumableArray(state);newDeck.splice(action.payload,1);return newDeck;},setResetCard:function setResetCard(state){var newDeck=[];state=newDeck;return state;}}});var _decksStoreSlice$acti=decksStoreSlice.actions,setViewState=_decksStoreSlice$acti.setViewState,setNewDecks=_decksStoreSlice$acti.setNewDecks,deleteCard=_decksStoreSlice$acti.deleteCard,setResetCard=_decksStoreSlice$acti.setResetCard;export{setViewState,setNewDecks,deleteCard,setResetCard};export default decksStoreSlice.reducer;","map":{"version":3,"names":["createSlice","deck","decks","decksStoreSlice","name","initialState","reducers","setViewState","state","console","log","setNewDecks","i","push","setNumberDecks","action","newDeck","payload","deleteCard","splice","setResetCard","actions","reducer"],"sources":["D:/PokerGame/src/store/reducer/decksStore.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { deck, cardState } from \"../entities/deck\";\r\n\r\n\r\nexport const decks:Array<cardState>=[]\r\n\r\nconst decksStoreSlice = createSlice({\r\n  name:'decks',\r\n  initialState: decks,\r\n  reducers:{\r\n    setViewState:(state) => { console.log(state)  },\r\n    setNewDecks:(state) =>{\r\n      state=[]\r\n      for( let i:number=0; i<6; i++){\r\n        state.push( ...deck ) \r\n      }  \r\n      return state;\r\n    },\r\n    setNumberDecks:(state, action:PayloadAction<number> ) => {\r\n      let newDeck:Array<cardState>=[]\r\n      for( let i:number=0; i<action.payload; i++){\r\n        newDeck.push( ...deck )\r\n      }\r\n      return newDeck;\r\n    }, \r\n    deleteCard:(state, action:PayloadAction<number> ) => {\r\n      let newDeck = [...state]  \r\n      newDeck.splice( action.payload , 1 ) \r\n      return newDeck\r\n     },\r\n    setResetCard:( state ) => {\r\n      let newDeck:Array<cardState>=[]\r\n      state = newDeck\r\n      return state;\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport const { setViewState, setNewDecks, deleteCard, setResetCard } = decksStoreSlice.actions \r\n\r\nexport default decksStoreSlice.reducer"],"mappings":"0GAAA,OAASA,WAAT,KAA2C,kBAA3C,CACA,OAASC,IAAT,KAAgC,kBAAhC,CAGA,MAAO,IAAMC,MAAsB,CAAC,EAA7B,CAEP,GAAMC,gBAAe,CAAGH,WAAW,CAAC,CAClCI,IAAI,CAAC,OAD6B,CAElCC,YAAY,CAAEH,KAFoB,CAGlCI,QAAQ,CAAC,CACPC,YAAY,CAAC,sBAACC,KAAD,CAAW,CAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAqB,CADxC,CAEPG,WAAW,CAAC,qBAACH,KAAD,CAAU,CACpBA,KAAK,CAAC,EAAN,CACA,IAAK,GAAII,EAAQ,CAAC,CAAlB,CAAqBA,CAAC,CAAC,CAAvB,CAA0BA,CAAC,EAA3B,CAA8B,YAC5B,QAAAJ,KAAK,EAACK,IAAN,iCAAeZ,IAAf,GACD,CACD,MAAOO,MAAP,CACD,CARM,CASPM,cAAc,CAAC,wBAACN,KAAD,CAAQO,MAAR,CAA0C,CACvD,GAAIC,QAAwB,CAAC,EAA7B,CACA,IAAK,GAAIJ,EAAQ,CAAC,CAAlB,CAAqBA,CAAC,CAACG,MAAM,CAACE,OAA9B,CAAuCL,CAAC,EAAxC,CAA2C,CACzCI,OAAO,CAACH,IAAR,OAAAG,OAAO,oBAAUf,IAAV,EAAP,CACD,CACD,MAAOe,QAAP,CACD,CAfM,CAgBPE,UAAU,CAAC,oBAACV,KAAD,CAAQO,MAAR,CAA0C,CACnD,GAAIC,QAAO,oBAAOR,KAAP,CAAX,CACAQ,OAAO,CAACG,MAAR,CAAgBJ,MAAM,CAACE,OAAvB,CAAiC,CAAjC,EACA,MAAOD,QAAP,CACA,CApBK,CAqBPI,YAAY,CAAC,sBAAEZ,KAAF,CAAa,CACxB,GAAIQ,QAAwB,CAAC,EAA7B,CACAR,KAAK,CAAGQ,OAAR,CACA,MAAOR,MAAP,CACD,CAzBM,CAHyB,CAAD,CAAnC,CAiCO,0BAAgEL,eAAe,CAACkB,OAAhF,CAAQd,YAAR,uBAAQA,YAAR,CAAsBI,WAAtB,uBAAsBA,WAAtB,CAAmCO,UAAnC,uBAAmCA,UAAnC,CAA+CE,YAA/C,uBAA+CA,YAA/C,C,yDAEP,cAAejB,gBAAe,CAACmB,OAA/B"},"metadata":{},"sourceType":"module"}